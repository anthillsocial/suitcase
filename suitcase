#!/usr/bin/python2
from GertbotMotorController import *
from PitchDetector import * 

# Callback function which is called whenever a new pitch is found 
def setmotor(frequency, energy):
    pitch = frequency
    sens = 40 # sensitivity
    if inrange(pitch, 400, sens): 
        print('Forward: {}'.format(pitch))
        mc.forward()  
    if inrange(pitch, 500, sens): 
        print('Backward: {}'.format(pitch))
        mc.reverse()  
    if inrange(pitch, 600, sens): 
        print('Stop: {}'.format(pitch))
    if inrange(pitch, 700, sens): 
        print('Stop2: {}'.format(pitch))
    if inrange(pitch, 1500, 500): 
        print('set speed: {}'.format(pitch))

# Is this pitch within a certain range
def inrange(pitch, target, sens):
    if pitch<=target+sens and pitch>=target-sens:return True
    else: return False

# Grab output from the commandline
def subproc(cmd):
    string = subprocess.check_output(cmd, shell=True).strip()
    return string

# Motor control object
mc = GertbotMotorController()

# Pitch detection object: pass a callback function
pd = PitchDetector(setmotor)

